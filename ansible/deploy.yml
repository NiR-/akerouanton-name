---
- hosts: all
  gather_facts: no
  vars_files:
    - 'config.yml'
  tasks:
    - name: Pull the latest image
      command: "docker pull {{ image }}:{{ tag }}"

    # Create network if necessary
    - name: Check if the default network exists
      command: "docker network inspect {{ project_name }}_default"
      failed_when: false
      register: net_exists
    - name: Create the default network
      command: "docker network create {{ project_name }}_default"
      when: net_exists.rc != 0

    # Add proxy container to the network
    - name: Check if nginx-proxy is already associated to the network
      command: 'docker inspect -f {%raw%}"{{.NetworkSettings.Networks.{%endraw%}{{ project_name }}{%raw%}_default}}"{%endraw%} proxy'
      register: is_proxy_associated
    - name: Add proxy container to the network
      command: "docker network connect {{ project_name }}_default proxy"
      when: "'<no value>' in is_proxy_associated.stdout"
      register: add_proxy_to_net

    # Finally run the latest container
    - name: Run latest container
      docker_service:
        project_name: "{{ project_name }}"
        # pull: yes
        definition:
          version: '2'
          services:
            web:
              image: "{{ image }}:{{ tag }}"
              restart: always
              environment:
                - VIRTUAL_HOST={{ virtual_hosts }}
                - VIRTUAL_PORT=80
      register: docker_service

    - debug: var=virtual_hosts

    - debug: var=docker_service
